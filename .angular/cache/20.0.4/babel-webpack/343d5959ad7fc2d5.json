{"ast":null,"code":"// angular import\nimport { input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/card\";\nconst _c0 = [\"headerOptionsTemplate\"];\nconst _c1 = [\"headerTitleTemplate\"];\nconst _c2 = [\"actionTemplate\"];\nconst _c3 = [\"*\"];\nfunction CardComponent_Conditional_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction CardComponent_Conditional_1_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction CardComponent_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card-header\", 1)(1, \"h5\");\n    i0.ɵɵtext(2);\n    i0.ɵɵtemplate(3, CardComponent_Conditional_1_ng_container_3_Template, 1, 0, \"ng-container\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, CardComponent_Conditional_1_ng_container_4_Template, 1, 0, \"ng-container\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.headerClass());\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.cardTitle(), \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.headerTitleTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.headerOptionsTemplate);\n  }\n}\nfunction CardComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card-content\");\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"padding\", ctx_r0.padding(), \"px\");\n  }\n}\nfunction CardComponent_Conditional_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction CardComponent_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card-actions\", 0);\n    i0.ɵɵtemplate(1, CardComponent_Conditional_3_ng_container_1_Template, 1, 0, \"ng-container\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.actionClass());\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.actionTemplate);\n  }\n}\nexport class CardComponent {\n  constructor() {\n    // public props\n    /**\n     * Class to be applied at card level\n     */\n    this.cardClass = input();\n    /**\n     * To hide header from card\n     */\n    this.showHeader = input(true);\n    /**\n     * To hide content from card\n     */\n    this.showContent = input(true);\n    /**\n     * Class to be applied on card header\n     */\n    this.headerClass = input();\n    /**\n     * Class to be applied on action section of mat card\n     */\n    this.actionClass = input();\n    /**\n     * Title of card. It will be visible at left side of card header\n     */\n    this.cardTitle = input();\n    /**\n     * padding around card content. default in px\n     */\n    this.padding = input(24); // set default to 24 px\n  }\n  static #_ = this.ɵfac = function CardComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CardComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CardComponent,\n    selectors: [[\"app-card\"]],\n    contentQueries: function CardComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c0, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c1, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c2, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerOptionsTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerTitleTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.actionTemplate = _t.first);\n      }\n    },\n    inputs: {\n      cardClass: [1, \"cardClass\"],\n      showHeader: [1, \"showHeader\"],\n      showContent: [1, \"showContent\"],\n      headerClass: [1, \"headerClass\"],\n      actionClass: [1, \"actionClass\"],\n      cardTitle: [1, \"cardTitle\"],\n      padding: [1, \"padding\"]\n    },\n    ngContentSelectors: _c3,\n    decls: 4,\n    vars: 4,\n    consts: [[3, \"ngClass\"], [1, \"card-header\", \"justify-content-between\", \"align-item-center\", 3, \"ngClass\"], [3, \"padding\"], [4, \"ngTemplateOutlet\"]],\n    template: function CardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"mat-card\", 0);\n        i0.ɵɵconditionalCreate(1, CardComponent_Conditional_1_Template, 5, 4, \"mat-card-header\", 1);\n        i0.ɵɵconditionalCreate(2, CardComponent_Conditional_2_Template, 2, 2, \"mat-card-content\", 2);\n        i0.ɵɵconditionalCreate(3, CardComponent_Conditional_3_Template, 2, 2, \"mat-card-actions\", 0);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", ctx.cardClass());\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.showHeader() ? 1 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.showContent() ? 2 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.actionTemplate ? 3 : -1);\n      }\n    },\n    dependencies: [CommonModule, i1.NgClass, i1.NgTemplateOutlet, MatCardModule, i2.MatCard, i2.MatCardActions, i2.MatCardContent, i2.MatCardHeader],\n    styles: [\".block[_ngcontent-%COMP%] {\\n  display: block !important;\\n}\\n\\n.card-action[_ngcontent-%COMP%] {\\n  border-top: 1px solid var(--accent-300);\\n  padding: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQHRoZW1lL2NvbXBvbmVudHMvY2FyZC9jYXJkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQUE7QUFDRjs7QUFFQTtFQUNFLHVDQUFBO0VBQ0EsYUFBQTtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLmJsb2NrIHtcbiAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbn1cblxuLmNhcmQtYWN0aW9uIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHZhcigtLWFjY2VudC0zMDApO1xuICBwYWRkaW5nOiAyMHB4O1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["input","CommonModule","MatCardModule","i0","ɵɵelementContainer","ɵɵelementStart","ɵɵtext","ɵɵtemplate","CardComponent_Conditional_1_ng_container_3_Template","ɵɵelementEnd","CardComponent_Conditional_1_ng_container_4_Template","ɵɵproperty","ctx_r0","headerClass","ɵɵadvance","ɵɵtextInterpolate1","cardTitle","headerTitleTemplate","headerOptionsTemplate","ɵɵprojection","ɵɵstyleProp","padding","CardComponent_Conditional_3_ng_container_1_Template","actionClass","actionTemplate","CardComponent","constructor","cardClass","showHeader","showContent","_","_2","selectors","contentQueries","CardComponent_ContentQueries","rf","ctx","dirIndex","ɵɵconditionalCreate","CardComponent_Conditional_1_Template","CardComponent_Conditional_2_Template","CardComponent_Conditional_3_Template","ɵɵconditional","i1","NgClass","NgTemplateOutlet","i2","MatCard","MatCardActions","MatCardContent","MatCardHeader","styles"],"sources":["C:\\Users\\azeez\\Desktop\\DevOps-CI-CD-azure-project\\src\\app\\@theme\\components\\card\\card.component.ts","C:\\Users\\azeez\\Desktop\\DevOps-CI-CD-azure-project\\src\\app\\@theme\\components\\card\\card.component.html"],"sourcesContent":["// angular import\nimport { Component, ContentChild, ElementRef, TemplateRef, input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'app-card',\n  imports: [CommonModule, MatCardModule],\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent {\n  // public props\n\n  /**\n   * Class to be applied at card level\n   */\n  readonly cardClass = input<string>();\n\n  /**\n   * To hide header from card\n   */\n  readonly showHeader = input(true);\n\n  /**\n   * To hide content from card\n   */\n  readonly showContent = input(true);\n\n  /**\n   * Class to be applied on card header\n   */\n  readonly headerClass = input<string>();\n\n  /**\n   * Class to be applied on action section of mat card\n   */\n  readonly actionClass = input<string>();\n\n  /**\n   * Title of card. It will be visible at left side of card header\n   */\n  readonly cardTitle = input<string>();\n\n  /**\n   * padding around card content. default in px\n   */\n  readonly padding = input(24); // set default to 24 px\n\n  /**\n   * Template reference of header actions on right side\n   */\n  @ContentChild('headerOptionsTemplate')\n  headerOptionsTemplate!: TemplateRef<ElementRef>;\n\n  /**\n   * Template reference of header actions besides title at left\n   */\n  @ContentChild('headerTitleTemplate')\n  headerTitleTemplate!: TemplateRef<ElementRef>;\n\n  /**\n   * Template reference for mat-actions at bottom\n   */\n  @ContentChild('actionTemplate') actionTemplate!: TemplateRef<ElementRef>;\n}\n","<mat-card [ngClass]=\"cardClass()\">\n  @if (showHeader()) {\n    <mat-card-header class=\"card-header justify-content-between align-item-center\" [ngClass]=\"headerClass()\">\n      <h5>\n        {{ cardTitle() }}\n        <ng-container *ngTemplateOutlet=\"headerTitleTemplate\"></ng-container>\n      </h5>\n      <ng-container *ngTemplateOutlet=\"headerOptionsTemplate\"></ng-container>\n    </mat-card-header>\n  }\n  @if (showContent()) {\n    <mat-card-content [style.padding.px]=\"padding()\">\n      <ng-content></ng-content>\n    </mat-card-content>\n  }\n  @if (actionTemplate) {\n    <mat-card-actions [ngClass]=\"actionClass()\">\n      <ng-container *ngTemplateOutlet=\"actionTemplate\"></ng-container>\n    </mat-card-actions>\n  }\n</mat-card>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}