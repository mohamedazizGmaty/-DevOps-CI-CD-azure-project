{"ast":null,"code":"import { FocusTrapFactory, FocusMonitor, InteractivityChecker } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Platform } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ChangeDetectorRef, ElementRef, NgZone, Component, ChangeDetectionStrategy, ViewEncapsulation, Renderer2, DOCUMENT, signal, EventEmitter, Injector, afterNextRender, Input, Output, ViewChild, QueryList, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, take, startWith, debounceTime } from 'rxjs/operators';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport '@angular/cdk/layout';\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nconst _c0 = [\"*\"];\nconst _c1 = [\"content\"];\nconst _c2 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c3 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatDrawerContainer_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵlistener(\"click\", function MatDrawerContainer_Conditional_0_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._onBackdropClicked());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r1._isShowingBackdrop());\n  }\n}\nfunction MatDrawerContainer_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-drawer-content\");\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c4 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c5 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nfunction MatSidenavContainer_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵlistener(\"click\", function MatSidenavContainer_Conditional_0_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._onBackdropClicked());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r1._isShowingBackdrop());\n  }\n}\nfunction MatSidenavContainer_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-sidenav-content\");\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c6 = \".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color, var(--mat-sys-on-background));background-color:var(--mat-sidenav-content-background-color, var(--mat-sys-background));box-sizing:border-box;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color, color-mix(in srgb, var(--mat-sys-neutral-variant20) 40%, transparent))}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}@media(forced-colors: active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-content.mat-drawer-content-hidden{opacity:0}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color, var(--mat-sys-on-surface-variant));box-shadow:var(--mat-sidenav-container-elevation-shadow, none);background-color:var(--mat-sidenav-container-background-color, var(--mat-sys-surface));border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));width:var(--mat-sidenav-container-width, 360px);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}@media(forced-colors: active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media(forced-colors: active){[dir=rtl] .mat-drawer,.mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-transition .mat-drawer{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating){visibility:hidden;box-shadow:none}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating) .mat-drawer-inner-container{display:none}.mat-drawer.mat-drawer-opened.mat-drawer-opened{transform:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto}.mat-sidenav-fixed{position:fixed}\\n\";\nfunction throwMatDuplicatedDrawerError(position) {\n  throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n  providedIn: 'root',\n  factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n  return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n  _platform = inject(Platform);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _container = inject(MatDrawerContainer);\n  constructor() {\n    const elementRef = inject(ElementRef);\n    const scrollDispatcher = inject(ScrollDispatcher);\n    const ngZone = inject(NgZone);\n    super(elementRef, scrollDispatcher, ngZone);\n  }\n  ngAfterContentInit() {\n    this._container._contentMarginChanges.subscribe(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  /** Determines whether the content element should be hidden from the user. */\n  _shouldBeHidden() {\n    // In some modes the content is pushed based on the width of the opened sidenavs, however on\n    // the server we can't measure the sidenav so the margin is always zero. This can cause the\n    // content to jump around when it's rendered on the server and hydrated on the client. We\n    // avoid it by hiding the content on the initial render and then showing it once the sidenav\n    // has been measured on the client.\n    if (this._platform.isBrowser) {\n      return false;\n    }\n    const {\n      start,\n      end\n    } = this._container;\n    return start != null && start.mode !== 'over' && start.opened || end != null && end.mode !== 'over' && end.opened;\n  }\n  static ɵfac = function MatDrawerContent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDrawerContent)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatDrawerContent,\n    selectors: [[\"mat-drawer-content\"]],\n    hostAttrs: [1, \"mat-drawer-content\"],\n    hostVars: 6,\n    hostBindings: function MatDrawerContent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n        i0.ɵɵclassProp(\"mat-drawer-content-hidden\", ctx._shouldBeHidden());\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkScrollable,\n      useExisting: MatDrawerContent\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MatDrawerContent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDrawerContent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer-content',\n      template: '<ng-content></ng-content>',\n      host: {\n        'class': 'mat-drawer-content',\n        '[style.margin-left.px]': '_container._contentMargins.left',\n        '[style.margin-right.px]': '_container._contentMargins.right',\n        '[class.mat-drawer-content-hidden]': '_shouldBeHidden()'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: CdkScrollable,\n        useExisting: MatDrawerContent\n      }]\n    }]\n  }], () => [], null);\n})();\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n  _elementRef = inject(ElementRef);\n  _focusTrapFactory = inject(FocusTrapFactory);\n  _focusMonitor = inject(FocusMonitor);\n  _platform = inject(Platform);\n  _ngZone = inject(NgZone);\n  _renderer = inject(Renderer2);\n  _interactivityChecker = inject(InteractivityChecker);\n  _doc = inject(DOCUMENT, {\n    optional: true\n  });\n  _container = inject(MAT_DRAWER_CONTAINER, {\n    optional: true\n  });\n  _focusTrap = null;\n  _elementFocusedBeforeDrawerWasOpened = null;\n  _eventCleanups;\n  /** Whether the view of the component has been attached. */\n  _isAttached;\n  /** Anchor node used to restore the drawer to its initial position. */\n  _anchor;\n  /** The side that the drawer is attached to. */\n  get position() {\n    return this._position;\n  }\n  set position(value) {\n    // Make sure we have a valid value.\n    value = value === 'end' ? 'end' : 'start';\n    if (value !== this._position) {\n      // Static inputs in Ivy are set before the element is in the DOM.\n      if (this._isAttached) {\n        this._updatePositionInParent(value);\n      }\n      this._position = value;\n      this.onPositionChanged.emit();\n    }\n  }\n  _position = 'start';\n  /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n  get mode() {\n    return this._mode;\n  }\n  set mode(value) {\n    this._mode = value;\n    this._updateFocusTrapState();\n    this._modeChanged.next();\n  }\n  _mode = 'over';\n  /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n  get disableClose() {\n    return this._disableClose;\n  }\n  set disableClose(value) {\n    this._disableClose = coerceBooleanProperty(value);\n  }\n  _disableClose = false;\n  /**\n   * Whether the drawer should focus the first focusable element automatically when opened.\n   * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n   * enabled, focus will be moved into the sidenav in `side` mode as well.\n   * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or AutoFocusTarget\n   * instead.\n   */\n  get autoFocus() {\n    const value = this._autoFocus;\n    // Note that usually we don't allow autoFocus to be set to `first-tabbable` in `side` mode,\n    // because we don't know how the sidenav is being used, but in some cases it still makes\n    // sense to do it. The consumer can explicitly set `autoFocus`.\n    if (value == null) {\n      if (this.mode === 'side') {\n        return 'dialog';\n      } else {\n        return 'first-tabbable';\n      }\n    }\n    return value;\n  }\n  set autoFocus(value) {\n    if (value === 'true' || value === 'false' || value == null) {\n      value = coerceBooleanProperty(value);\n    }\n    this._autoFocus = value;\n  }\n  _autoFocus;\n  /**\n   * Whether the drawer is opened. We overload this because we trigger an event when it\n   * starts or end.\n   */\n  get opened() {\n    return this._opened();\n  }\n  set opened(value) {\n    this.toggle(coerceBooleanProperty(value));\n  }\n  _opened = signal(false);\n  /** How the sidenav was opened (keypress, mouse click etc.) */\n  _openedVia;\n  /** Emits whenever the drawer has started animating. */\n  _animationStarted = new Subject();\n  /** Emits whenever the drawer is done animating. */\n  _animationEnd = new Subject();\n  /** Event emitted when the drawer open state is changed. */\n  openedChange =\n  // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n  new EventEmitter(/* isAsync */true);\n  /** Event emitted when the drawer has been opened. */\n  _openedStream = this.openedChange.pipe(filter(o => o), map(() => {}));\n  /** Event emitted when the drawer has started opening. */\n  openedStart = this._animationStarted.pipe(filter(() => this.opened), mapTo(undefined));\n  /** Event emitted when the drawer has been closed. */\n  _closedStream = this.openedChange.pipe(filter(o => !o), map(() => {}));\n  /** Event emitted when the drawer has started closing. */\n  closedStart = this._animationStarted.pipe(filter(() => !this.opened), mapTo(undefined));\n  /** Emits when the component is destroyed. */\n  _destroyed = new Subject();\n  /** Event emitted when the drawer's position changes. */\n  // tslint:disable-next-line:no-output-on-prefix\n  onPositionChanged = new EventEmitter();\n  /** Reference to the inner element that contains all the content. */\n  _content;\n  /**\n   * An observable that emits when the drawer mode changes. This is used by the drawer container to\n   * to know when to when the mode changes so it can adapt the margins on the content.\n   */\n  _modeChanged = new Subject();\n  _injector = inject(Injector);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  constructor() {\n    this.openedChange.pipe(takeUntil(this._destroyed)).subscribe(opened => {\n      if (opened) {\n        if (this._doc) {\n          this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n        }\n        this._takeFocus();\n      } else if (this._isFocusWithinDrawer()) {\n        this._restoreFocus(this._openedVia || 'program');\n      }\n    });\n    /**\n     * Listen to `keydown` events outside the zone so that change detection is not run every\n     * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n     * and we don't have close disabled.\n     */\n    this._ngZone.runOutsideAngular(() => {\n      const element = this._elementRef.nativeElement;\n      fromEvent(element, 'keydown').pipe(filter(event => {\n        return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n      }), takeUntil(this._destroyed)).subscribe(event => this._ngZone.run(() => {\n        this.close();\n        event.stopPropagation();\n        event.preventDefault();\n      }));\n      this._eventCleanups = [this._renderer.listen(element, 'transitionrun', this._handleTransitionEvent), this._renderer.listen(element, 'transitionend', this._handleTransitionEvent), this._renderer.listen(element, 'transitioncancel', this._handleTransitionEvent)];\n    });\n    this._animationEnd.subscribe(() => {\n      this.openedChange.emit(this.opened);\n    });\n  }\n  /**\n   * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n   * attribute to forcefully focus it. The attribute is removed after focus is moved.\n   * @param element The element to focus.\n   */\n  _forceFocus(element, options) {\n    if (!this._interactivityChecker.isFocusable(element)) {\n      element.tabIndex = -1;\n      // The tabindex attribute should be removed to avoid navigating to that element again\n      this._ngZone.runOutsideAngular(() => {\n        const callback = () => {\n          cleanupBlur();\n          cleanupMousedown();\n          element.removeAttribute('tabindex');\n        };\n        const cleanupBlur = this._renderer.listen(element, 'blur', callback);\n        const cleanupMousedown = this._renderer.listen(element, 'mousedown', callback);\n      });\n    }\n    element.focus(options);\n  }\n  /**\n   * Focuses the first element that matches the given selector within the focus trap.\n   * @param selector The CSS selector for the element to set focus to.\n   */\n  _focusByCssSelector(selector, options) {\n    let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n    if (elementToFocus) {\n      this._forceFocus(elementToFocus, options);\n    }\n  }\n  /**\n   * Moves focus into the drawer. Note that this works even if\n   * the focus trap is disabled in `side` mode.\n   */\n  _takeFocus() {\n    if (!this._focusTrap) {\n      return;\n    }\n    const element = this._elementRef.nativeElement;\n    // When autoFocus is not on the sidenav, if the element cannot be focused or does\n    // not exist, focus the sidenav itself so the keyboard navigation still works.\n    // We need to check that `focus` is a function due to Universal.\n    switch (this.autoFocus) {\n      case false:\n      case 'dialog':\n        return;\n      case true:\n      case 'first-tabbable':\n        afterNextRender(() => {\n          const hasMovedFocus = this._focusTrap.focusInitialElement();\n          if (!hasMovedFocus && typeof element.focus === 'function') {\n            element.focus();\n          }\n        }, {\n          injector: this._injector\n        });\n        break;\n      case 'first-heading':\n        this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n        break;\n      default:\n        this._focusByCssSelector(this.autoFocus);\n        break;\n    }\n  }\n  /**\n   * Restores focus to the element that was originally focused when the drawer opened.\n   * If no element was focused at that time, the focus will be restored to the drawer.\n   */\n  _restoreFocus(focusOrigin) {\n    if (this.autoFocus === 'dialog') {\n      return;\n    }\n    if (this._elementFocusedBeforeDrawerWasOpened) {\n      this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, focusOrigin);\n    } else {\n      this._elementRef.nativeElement.blur();\n    }\n    this._elementFocusedBeforeDrawerWasOpened = null;\n  }\n  /** Whether focus is currently within the drawer. */\n  _isFocusWithinDrawer() {\n    const activeEl = this._doc.activeElement;\n    return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n  }\n  ngAfterViewInit() {\n    this._isAttached = true;\n    // Only update the DOM position when the sidenav is positioned at\n    // the end since we project the sidenav before the content by default.\n    if (this._position === 'end') {\n      this._updatePositionInParent('end');\n    }\n    // Needs to happen after the position is updated\n    // so the focus trap anchors are in the right place.\n    if (this._platform.isBrowser) {\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n      this._updateFocusTrapState();\n    }\n  }\n  ngOnDestroy() {\n    this._eventCleanups.forEach(cleanup => cleanup());\n    this._focusTrap?.destroy();\n    this._anchor?.remove();\n    this._anchor = null;\n    this._animationStarted.complete();\n    this._animationEnd.complete();\n    this._modeChanged.complete();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /**\n   * Open the drawer.\n   * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n   * Used for focus management after the sidenav is closed.\n   */\n  open(openedVia) {\n    return this.toggle(true, openedVia);\n  }\n  /** Close the drawer. */\n  close() {\n    return this.toggle(false);\n  }\n  /** Closes the drawer with context that the backdrop was clicked. */\n  _closeViaBackdropClick() {\n    // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n    // don't need to check whether focus is currently in the drawer, as clicking on the\n    // backdrop causes blurs the active element.\n    return this._setOpen(/* isOpen */false, /* restoreFocus */true, 'mouse');\n  }\n  /**\n   * Toggle this drawer.\n   * @param isOpen Whether the drawer should be open.\n   * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n   * Used for focus management after the sidenav is closed.\n   */\n  toggle(isOpen = !this.opened, openedVia) {\n    // If the focus is currently inside the drawer content and we are closing the drawer,\n    // restore the focus to the initially focused element (when the drawer opened).\n    if (isOpen && openedVia) {\n      this._openedVia = openedVia;\n    }\n    const result = this._setOpen(isOpen, /* restoreFocus */!isOpen && this._isFocusWithinDrawer(), this._openedVia || 'program');\n    if (!isOpen) {\n      this._openedVia = null;\n    }\n    return result;\n  }\n  /**\n   * Toggles the opened state of the drawer.\n   * @param isOpen Whether the drawer should open or close.\n   * @param restoreFocus Whether focus should be restored on close.\n   * @param focusOrigin Origin to use when restoring focus.\n   */\n  _setOpen(isOpen, restoreFocus, focusOrigin) {\n    if (isOpen === this.opened) {\n      return Promise.resolve(isOpen ? 'open' : 'close');\n    }\n    this._opened.set(isOpen);\n    if (this._container?._transitionsEnabled) {\n      // Note: it's importatnt to set this as early as possible,\n      // otherwise the animation can look glitchy in some cases.\n      this._setIsAnimating(true);\n    } else {\n      // Simulate the animation events if animations are disabled.\n      setTimeout(() => {\n        this._animationStarted.next();\n        this._animationEnd.next();\n      });\n    }\n    this._elementRef.nativeElement.classList.toggle('mat-drawer-opened', isOpen);\n    if (!isOpen && restoreFocus) {\n      this._restoreFocus(focusOrigin);\n    }\n    // Needed to ensure that the closing sequence fires off correctly.\n    this._changeDetectorRef.markForCheck();\n    this._updateFocusTrapState();\n    return new Promise(resolve => {\n      this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n    });\n  }\n  /** Toggles whether the drawer is currently animating. */\n  _setIsAnimating(isAnimating) {\n    this._elementRef.nativeElement.classList.toggle('mat-drawer-animating', isAnimating);\n  }\n  _getWidth() {\n    return this._elementRef.nativeElement.offsetWidth || 0;\n  }\n  /** Updates the enabled state of the focus trap. */\n  _updateFocusTrapState() {\n    if (this._focusTrap) {\n      // Trap focus only if the backdrop is enabled. Otherwise, allow end user to interact with the\n      // sidenav content.\n      this._focusTrap.enabled = !!this._container?.hasBackdrop && this.opened;\n    }\n  }\n  /**\n   * Updates the position of the drawer in the DOM. We need to move the element around ourselves\n   * when it's in the `end` position so that it comes after the content and the visual order\n   * matches the tab order. We also need to be able to move it back to `start` if the sidenav\n   * started off as `end` and was changed to `start`.\n   */\n  _updatePositionInParent(newPosition) {\n    // Don't move the DOM node around on the server, because it can throw off hydration.\n    if (!this._platform.isBrowser) {\n      return;\n    }\n    const element = this._elementRef.nativeElement;\n    const parent = element.parentNode;\n    if (newPosition === 'end') {\n      if (!this._anchor) {\n        this._anchor = this._doc.createComment('mat-drawer-anchor');\n        parent.insertBefore(this._anchor, element);\n      }\n      parent.appendChild(element);\n    } else if (this._anchor) {\n      this._anchor.parentNode.insertBefore(element, this._anchor);\n    }\n  }\n  /** Event handler for animation events. */\n  _handleTransitionEvent = event => {\n    const element = this._elementRef.nativeElement;\n    if (event.target === element) {\n      this._ngZone.run(() => {\n        if (event.type === 'transitionrun') {\n          this._animationStarted.next(event);\n        } else {\n          // Don't toggle the animating state on `transitioncancel` since another animation should\n          // start afterwards. This prevents the drawer from blinking if an animation is interrupted.\n          if (event.type === 'transitionend') {\n            this._setIsAnimating(false);\n          }\n          this._animationEnd.next(event);\n        }\n      });\n    }\n  };\n  static ɵfac = function MatDrawer_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDrawer)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatDrawer,\n    selectors: [[\"mat-drawer\"]],\n    viewQuery: function MatDrawer_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._content = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-drawer\"],\n    hostVars: 12,\n    hostBindings: function MatDrawer_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"align\", null)(\"tabIndex\", ctx.mode !== \"side\" ? \"-1\" : null);\n        i0.ɵɵstyleProp(\"visibility\", !ctx._container && !ctx.opened ? \"hidden\" : null);\n        i0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\");\n      }\n    },\n    inputs: {\n      position: \"position\",\n      mode: \"mode\",\n      disableClose: \"disableClose\",\n      autoFocus: \"autoFocus\",\n      opened: \"opened\"\n    },\n    outputs: {\n      openedChange: \"openedChange\",\n      _openedStream: \"opened\",\n      openedStart: \"openedStart\",\n      _closedStream: \"closed\",\n      closedStart: \"closedStart\",\n      onPositionChanged: \"positionChanged\"\n    },\n    exportAs: [\"matDrawer\"],\n    ngContentSelectors: _c0,\n    decls: 3,\n    vars: 0,\n    consts: [[\"content\", \"\"], [\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"]],\n    template: function MatDrawer_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n      }\n    },\n    dependencies: [CdkScrollable],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDrawer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer',\n      exportAs: 'matDrawer',\n      host: {\n        'class': 'mat-drawer',\n        // must prevent the browser from aligning text based on value\n        '[attr.align]': 'null',\n        '[class.mat-drawer-end]': 'position === \"end\"',\n        '[class.mat-drawer-over]': 'mode === \"over\"',\n        '[class.mat-drawer-push]': 'mode === \"push\"',\n        '[class.mat-drawer-side]': 'mode === \"side\"',\n        // The styles that render the sidenav off-screen come from the drawer container. Prior to #30235\n        // this was also done by the animations module which some internal tests seem to depend on.\n        // Simulate it by toggling the `hidden` attribute instead.\n        '[style.visibility]': '(!_container && !opened) ? \"hidden\" : null',\n        // The sidenav container should not be focused on when used in side mode. See b/286459024 for\n        // reference. Updates tabIndex of drawer/container to default to null if in side mode.\n        '[attr.tabIndex]': '(mode !== \"side\") ? \"-1\" : null'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      imports: [CdkScrollable],\n      template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\"\n    }]\n  }], () => [], {\n    position: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    disableClose: [{\n      type: Input\n    }],\n    autoFocus: [{\n      type: Input\n    }],\n    opened: [{\n      type: Input\n    }],\n    openedChange: [{\n      type: Output\n    }],\n    _openedStream: [{\n      type: Output,\n      args: ['opened']\n    }],\n    openedStart: [{\n      type: Output\n    }],\n    _closedStream: [{\n      type: Output,\n      args: ['closed']\n    }],\n    closedStart: [{\n      type: Output\n    }],\n    onPositionChanged: [{\n      type: Output,\n      args: ['positionChanged']\n    }],\n    _content: [{\n      type: ViewChild,\n      args: ['content']\n    }]\n  });\n})();\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _element = inject(ElementRef);\n  _ngZone = inject(NgZone);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _animationDisabled = _animationsDisabled();\n  _transitionsEnabled = false;\n  /** All drawers in the container. Includes drawers from inside nested containers. */\n  _allDrawers;\n  /** Drawers that belong to this container. */\n  _drawers = new QueryList();\n  _content;\n  _userContent;\n  /** The drawer child with the `start` position. */\n  get start() {\n    return this._start;\n  }\n  /** The drawer child with the `end` position. */\n  get end() {\n    return this._end;\n  }\n  /**\n   * Whether to automatically resize the container whenever\n   * the size of any of its drawers changes.\n   *\n   * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n   * the drawers on every change detection cycle. Can be configured globally via the\n   * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n   */\n  get autosize() {\n    return this._autosize;\n  }\n  set autosize(value) {\n    this._autosize = coerceBooleanProperty(value);\n  }\n  _autosize = inject(MAT_DRAWER_DEFAULT_AUTOSIZE);\n  /**\n   * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n   * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n   * mode as well.\n   */\n  get hasBackdrop() {\n    return this._drawerHasBackdrop(this._start) || this._drawerHasBackdrop(this._end);\n  }\n  set hasBackdrop(value) {\n    this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n  }\n  _backdropOverride;\n  /** Event emitted when the drawer backdrop is clicked. */\n  backdropClick = new EventEmitter();\n  /** The drawer at the start/end position, independent of direction. */\n  _start;\n  _end;\n  /**\n   * The drawer at the left/right. When direction changes, these will change as well.\n   * They're used as aliases for the above to set the left/right style properly.\n   * In LTR, _left == _start and _right == _end.\n   * In RTL, _left == _end and _right == _start.\n   */\n  _left;\n  _right;\n  /** Emits when the component is destroyed. */\n  _destroyed = new Subject();\n  /** Emits on every ngDoCheck. Used for debouncing reflows. */\n  _doCheckSubject = new Subject();\n  /**\n   * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n   * drawer is open. We use margin rather than transform even for push mode because transform breaks\n   * fixed position elements inside of the transformed element.\n   */\n  _contentMargins = {\n    left: null,\n    right: null\n  };\n  _contentMarginChanges = new Subject();\n  /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n  get scrollable() {\n    return this._userContent || this._content;\n  }\n  _injector = inject(Injector);\n  constructor() {\n    const platform = inject(Platform);\n    const viewportRuler = inject(ViewportRuler);\n    // If a `Dir` directive exists up the tree, listen direction changes\n    // and update the left/right properties to point to the proper start/end.\n    this._dir?.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._validateDrawers();\n      this.updateContentMargins();\n    });\n    // Since the minimum width of the sidenav depends on the viewport width,\n    // we need to recompute the margins if the viewport changes.\n    viewportRuler.change().pipe(takeUntil(this._destroyed)).subscribe(() => this.updateContentMargins());\n    if (!this._animationDisabled && platform.isBrowser) {\n      this._ngZone.runOutsideAngular(() => {\n        // Enable the animations after a delay in order to skip\n        // the initial transition if a drawer is open by default.\n        setTimeout(() => {\n          this._element.nativeElement.classList.add('mat-drawer-transition');\n          this._transitionsEnabled = true;\n        }, 200);\n      });\n    }\n  }\n  ngAfterContentInit() {\n    this._allDrawers.changes.pipe(startWith(this._allDrawers), takeUntil(this._destroyed)).subscribe(drawer => {\n      this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n      this._drawers.notifyOnChanges();\n    });\n    this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n      this._validateDrawers();\n      this._drawers.forEach(drawer => {\n        this._watchDrawerToggle(drawer);\n        this._watchDrawerPosition(drawer);\n        this._watchDrawerMode(drawer);\n      });\n      if (!this._drawers.length || this._isDrawerOpen(this._start) || this._isDrawerOpen(this._end)) {\n        this.updateContentMargins();\n      }\n      this._changeDetectorRef.markForCheck();\n    });\n    // Avoid hitting the NgZone through the debounce timeout.\n    this._ngZone.runOutsideAngular(() => {\n      this._doCheckSubject.pipe(debounceTime(10),\n      // Arbitrary debounce time, less than a frame at 60fps\n      takeUntil(this._destroyed)).subscribe(() => this.updateContentMargins());\n    });\n  }\n  ngOnDestroy() {\n    this._contentMarginChanges.complete();\n    this._doCheckSubject.complete();\n    this._drawers.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /** Calls `open` of both start and end drawers */\n  open() {\n    this._drawers.forEach(drawer => drawer.open());\n  }\n  /** Calls `close` of both start and end drawers */\n  close() {\n    this._drawers.forEach(drawer => drawer.close());\n  }\n  /**\n   * Recalculates and updates the inline styles for the content. Note that this should be used\n   * sparingly, because it causes a reflow.\n   */\n  updateContentMargins() {\n    // 1. For drawers in `over` mode, they don't affect the content.\n    // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n    //    left margin (for left drawer) or right margin (for right the drawer).\n    // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n    //    adding to the left or right margin and simultaneously subtracting the same amount of\n    //    margin from the other side.\n    let left = 0;\n    let right = 0;\n    if (this._left && this._left.opened) {\n      if (this._left.mode == 'side') {\n        left += this._left._getWidth();\n      } else if (this._left.mode == 'push') {\n        const width = this._left._getWidth();\n        left += width;\n        right -= width;\n      }\n    }\n    if (this._right && this._right.opened) {\n      if (this._right.mode == 'side') {\n        right += this._right._getWidth();\n      } else if (this._right.mode == 'push') {\n        const width = this._right._getWidth();\n        right += width;\n        left -= width;\n      }\n    }\n    // If either `right` or `left` is zero, don't set a style to the element. This\n    // allows users to specify a custom size via CSS class in SSR scenarios where the\n    // measured widths will always be zero. Note that we reset to `null` here, rather\n    // than below, in order to ensure that the types in the `if` below are consistent.\n    left = left || null;\n    right = right || null;\n    if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n      this._contentMargins = {\n        left,\n        right\n      };\n      // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n      // to do it only when something changed, otherwise we can end up hitting the zone too often.\n      this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n    }\n  }\n  ngDoCheck() {\n    // If users opted into autosizing, do a check every change detection cycle.\n    if (this._autosize && this._isPushed()) {\n      // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n      this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n    }\n  }\n  /**\n   * Subscribes to drawer events in order to set a class on the main container element when the\n   * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n   * is properly hidden.\n   */\n  _watchDrawerToggle(drawer) {\n    drawer._animationStarted.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n      this.updateContentMargins();\n      this._changeDetectorRef.markForCheck();\n    });\n    if (drawer.mode !== 'side') {\n      drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(() => this._setContainerClass(drawer.opened));\n    }\n  }\n  /**\n   * Subscribes to drawer onPositionChanged event in order to\n   * re-validate drawers when the position changes.\n   */\n  _watchDrawerPosition(drawer) {\n    // NOTE: We need to wait for the microtask queue to be empty before validating,\n    // since both drawers may be swapping positions at the same time.\n    drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n      afterNextRender({\n        read: () => this._validateDrawers()\n      }, {\n        injector: this._injector\n      });\n    });\n  }\n  /** Subscribes to changes in drawer mode so we can run change detection. */\n  _watchDrawerMode(drawer) {\n    drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed))).subscribe(() => {\n      this.updateContentMargins();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n  _setContainerClass(isAdd) {\n    const classList = this._element.nativeElement.classList;\n    const className = 'mat-drawer-container-has-open';\n    if (isAdd) {\n      classList.add(className);\n    } else {\n      classList.remove(className);\n    }\n  }\n  /** Validate the state of the drawer children components. */\n  _validateDrawers() {\n    this._start = this._end = null;\n    // Ensure that we have at most one start and one end drawer.\n    this._drawers.forEach(drawer => {\n      if (drawer.position == 'end') {\n        if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throwMatDuplicatedDrawerError('end');\n        }\n        this._end = drawer;\n      } else {\n        if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throwMatDuplicatedDrawerError('start');\n        }\n        this._start = drawer;\n      }\n    });\n    this._right = this._left = null;\n    // Detect if we're LTR or RTL.\n    if (this._dir && this._dir.value === 'rtl') {\n      this._left = this._end;\n      this._right = this._start;\n    } else {\n      this._left = this._start;\n      this._right = this._end;\n    }\n  }\n  /** Whether the container is being pushed to the side by one of the drawers. */\n  _isPushed() {\n    return this._isDrawerOpen(this._start) && this._start.mode != 'over' || this._isDrawerOpen(this._end) && this._end.mode != 'over';\n  }\n  _onBackdropClicked() {\n    this.backdropClick.emit();\n    this._closeModalDrawersViaBackdrop();\n  }\n  _closeModalDrawersViaBackdrop() {\n    // Close all open drawers where closing is not disabled and the mode is not `side`.\n    [this._start, this._end].filter(drawer => drawer && !drawer.disableClose && this._drawerHasBackdrop(drawer)).forEach(drawer => drawer._closeViaBackdropClick());\n  }\n  _isShowingBackdrop() {\n    return this._isDrawerOpen(this._start) && this._drawerHasBackdrop(this._start) || this._isDrawerOpen(this._end) && this._drawerHasBackdrop(this._end);\n  }\n  _isDrawerOpen(drawer) {\n    return drawer != null && drawer.opened;\n  }\n  // Whether argument drawer should have a backdrop when it opens\n  _drawerHasBackdrop(drawer) {\n    if (this._backdropOverride == null) {\n      return !!drawer && drawer.mode !== 'side';\n    }\n    return this._backdropOverride;\n  }\n  static ɵfac = function MatDrawerContainer_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDrawerContainer)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatDrawerContainer,\n    selectors: [[\"mat-drawer-container\"]],\n    contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatDrawerContent, 5);\n        i0.ɵɵcontentQuery(dirIndex, MatDrawer, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n      }\n    },\n    viewQuery: function MatDrawerContainer_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatDrawerContent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-drawer-container\"],\n    hostVars: 2,\n    hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n      }\n    },\n    inputs: {\n      autosize: \"autosize\",\n      hasBackdrop: \"hasBackdrop\"\n    },\n    outputs: {\n      backdropClick: \"backdropClick\"\n    },\n    exportAs: [\"matDrawerContainer\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_DRAWER_CONTAINER,\n      useExisting: MatDrawerContainer\n    }])],\n    ngContentSelectors: _c3,\n    decls: 4,\n    vars: 2,\n    consts: [[1, \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]],\n    template: function MatDrawerContainer_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c2);\n        i0.ɵɵconditionalCreate(0, MatDrawerContainer_Conditional_0_Template, 1, 2, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵprojection(2, 1);\n        i0.ɵɵconditionalCreate(3, MatDrawerContainer_Conditional_3_Template, 2, 0, \"mat-drawer-content\");\n      }\n      if (rf & 2) {\n        i0.ɵɵconditional(ctx.hasBackdrop ? 0 : -1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵconditional(!ctx._content ? 3 : -1);\n      }\n    },\n    dependencies: [MatDrawerContent],\n    styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color, var(--mat-sys-on-background));background-color:var(--mat-sidenav-content-background-color, var(--mat-sys-background));box-sizing:border-box;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color, color-mix(in srgb, var(--mat-sys-neutral-variant20) 40%, transparent))}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}@media(forced-colors: active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-content.mat-drawer-content-hidden{opacity:0}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color, var(--mat-sys-on-surface-variant));box-shadow:var(--mat-sidenav-container-elevation-shadow, none);background-color:var(--mat-sidenav-container-background-color, var(--mat-sys-surface));border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));width:var(--mat-sidenav-container-width, 360px);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}@media(forced-colors: active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media(forced-colors: active){[dir=rtl] .mat-drawer,.mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-transition .mat-drawer{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating){visibility:hidden;box-shadow:none}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating) .mat-drawer-inner-container{display:none}.mat-drawer.mat-drawer-opened.mat-drawer-opened{transform:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto}.mat-sidenav-fixed{position:fixed}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDrawerContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer-container',\n      exportAs: 'matDrawerContainer',\n      host: {\n        'class': 'mat-drawer-container',\n        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: MAT_DRAWER_CONTAINER,\n        useExisting: MatDrawerContainer\n      }],\n      imports: [MatDrawerContent],\n      template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-drawer-content>\\n    <ng-content></ng-content>\\n  </mat-drawer-content>\\n}\\n\",\n      styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color, var(--mat-sys-on-background));background-color:var(--mat-sidenav-content-background-color, var(--mat-sys-background));box-sizing:border-box;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color, color-mix(in srgb, var(--mat-sys-neutral-variant20) 40%, transparent))}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}@media(forced-colors: active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-content.mat-drawer-content-hidden{opacity:0}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color, var(--mat-sys-on-surface-variant));box-shadow:var(--mat-sidenav-container-elevation-shadow, none);background-color:var(--mat-sidenav-container-background-color, var(--mat-sys-surface));border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));width:var(--mat-sidenav-container-width, 360px);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}@media(forced-colors: active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media(forced-colors: active){[dir=rtl] .mat-drawer,.mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-transition .mat-drawer{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating){visibility:hidden;box-shadow:none}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating) .mat-drawer-inner-container{display:none}.mat-drawer.mat-drawer-opened.mat-drawer-opened{transform:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto}.mat-sidenav-fixed{position:fixed}\\n\"]\n    }]\n  }], () => [], {\n    _allDrawers: [{\n      type: ContentChildren,\n      args: [MatDrawer, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }],\n    _content: [{\n      type: ContentChild,\n      args: [MatDrawerContent]\n    }],\n    _userContent: [{\n      type: ViewChild,\n      args: [MatDrawerContent]\n    }],\n    autosize: [{\n      type: Input\n    }],\n    hasBackdrop: [{\n      type: Input\n    }],\n    backdropClick: [{\n      type: Output\n    }]\n  });\n})();\nclass MatSidenavContent extends MatDrawerContent {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatSidenavContent_BaseFactory;\n    return function MatSidenavContent_Factory(__ngFactoryType__) {\n      return (ɵMatSidenavContent_BaseFactory || (ɵMatSidenavContent_BaseFactory = i0.ɵɵgetInheritedFactory(MatSidenavContent)))(__ngFactoryType__ || MatSidenavContent);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatSidenavContent,\n    selectors: [[\"mat-sidenav-content\"]],\n    hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkScrollable,\n      useExisting: MatSidenavContent\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MatSidenavContent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSidenavContent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav-content',\n      template: '<ng-content></ng-content>',\n      host: {\n        'class': 'mat-drawer-content mat-sidenav-content'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: CdkScrollable,\n        useExisting: MatSidenavContent\n      }]\n    }]\n  }], null, null);\n})();\nclass MatSidenav extends MatDrawer {\n  /** Whether the sidenav is fixed in the viewport. */\n  get fixedInViewport() {\n    return this._fixedInViewport;\n  }\n  set fixedInViewport(value) {\n    this._fixedInViewport = coerceBooleanProperty(value);\n  }\n  _fixedInViewport = false;\n  /**\n   * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n   * mode.\n   */\n  get fixedTopGap() {\n    return this._fixedTopGap;\n  }\n  set fixedTopGap(value) {\n    this._fixedTopGap = coerceNumberProperty(value);\n  }\n  _fixedTopGap = 0;\n  /**\n   * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n   * fixed mode.\n   */\n  get fixedBottomGap() {\n    return this._fixedBottomGap;\n  }\n  set fixedBottomGap(value) {\n    this._fixedBottomGap = coerceNumberProperty(value);\n  }\n  _fixedBottomGap = 0;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatSidenav_BaseFactory;\n    return function MatSidenav_Factory(__ngFactoryType__) {\n      return (ɵMatSidenav_BaseFactory || (ɵMatSidenav_BaseFactory = i0.ɵɵgetInheritedFactory(MatSidenav)))(__ngFactoryType__ || MatSidenav);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatSidenav,\n    selectors: [[\"mat-sidenav\"]],\n    hostAttrs: [1, \"mat-drawer\", \"mat-sidenav\"],\n    hostVars: 16,\n    hostBindings: function MatSidenav_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"tabIndex\", ctx.mode !== \"side\" ? \"-1\" : null)(\"align\", null);\n        i0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n        i0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n      }\n    },\n    inputs: {\n      fixedInViewport: \"fixedInViewport\",\n      fixedTopGap: \"fixedTopGap\",\n      fixedBottomGap: \"fixedBottomGap\"\n    },\n    exportAs: [\"matSidenav\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MatDrawer,\n      useExisting: MatSidenav\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 3,\n    vars: 0,\n    consts: [[\"content\", \"\"], [\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"]],\n    template: function MatSidenav_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n      }\n    },\n    dependencies: [CdkScrollable],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSidenav, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav',\n      exportAs: 'matSidenav',\n      host: {\n        'class': 'mat-drawer mat-sidenav',\n        // The sidenav container should not be focused on when used in side mode. See b/286459024 for\n        // reference. Updates tabIndex of drawer/container to default to null if in side mode.\n        '[attr.tabIndex]': '(mode !== \"side\") ? \"-1\" : null',\n        // must prevent the browser from aligning text based on value\n        '[attr.align]': 'null',\n        '[class.mat-drawer-end]': 'position === \"end\"',\n        '[class.mat-drawer-over]': 'mode === \"over\"',\n        '[class.mat-drawer-push]': 'mode === \"push\"',\n        '[class.mat-drawer-side]': 'mode === \"side\"',\n        '[class.mat-sidenav-fixed]': 'fixedInViewport',\n        '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n        '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      imports: [CdkScrollable],\n      providers: [{\n        provide: MatDrawer,\n        useExisting: MatSidenav\n      }],\n      template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\"\n    }]\n  }], null, {\n    fixedInViewport: [{\n      type: Input\n    }],\n    fixedTopGap: [{\n      type: Input\n    }],\n    fixedBottomGap: [{\n      type: Input\n    }]\n  });\n})();\nclass MatSidenavContainer extends MatDrawerContainer {\n  _allDrawers = undefined;\n  // We need an initializer here to avoid a TS error.\n  _content = undefined;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatSidenavContainer_BaseFactory;\n    return function MatSidenavContainer_Factory(__ngFactoryType__) {\n      return (ɵMatSidenavContainer_BaseFactory || (ɵMatSidenavContainer_BaseFactory = i0.ɵɵgetInheritedFactory(MatSidenavContainer)))(__ngFactoryType__ || MatSidenavContainer);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatSidenavContainer,\n    selectors: [[\"mat-sidenav-container\"]],\n    contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatSidenavContent, 5);\n        i0.ɵɵcontentQuery(dirIndex, MatSidenav, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n      }\n    },\n    hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"],\n    hostVars: 2,\n    hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n      }\n    },\n    exportAs: [\"matSidenavContainer\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_DRAWER_CONTAINER,\n      useExisting: MatSidenavContainer\n    }, {\n      provide: MatDrawerContainer,\n      useExisting: MatSidenavContainer\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c5,\n    decls: 4,\n    vars: 2,\n    consts: [[1, \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]],\n    template: function MatSidenavContainer_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c4);\n        i0.ɵɵconditionalCreate(0, MatSidenavContainer_Conditional_0_Template, 1, 2, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵprojection(2, 1);\n        i0.ɵɵconditionalCreate(3, MatSidenavContainer_Conditional_3_Template, 2, 0, \"mat-sidenav-content\");\n      }\n      if (rf & 2) {\n        i0.ɵɵconditional(ctx.hasBackdrop ? 0 : -1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵconditional(!ctx._content ? 3 : -1);\n      }\n    },\n    dependencies: [MatSidenavContent],\n    styles: [_c6],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSidenavContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav-container',\n      exportAs: 'matSidenavContainer',\n      host: {\n        'class': 'mat-drawer-container mat-sidenav-container',\n        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: MAT_DRAWER_CONTAINER,\n        useExisting: MatSidenavContainer\n      }, {\n        provide: MatDrawerContainer,\n        useExisting: MatSidenavContainer\n      }],\n      imports: [MatSidenavContent],\n      template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-sidenav-content>\\n    <ng-content></ng-content>\\n  </mat-sidenav-content>\\n}\\n\",\n      styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color, var(--mat-sys-on-background));background-color:var(--mat-sidenav-content-background-color, var(--mat-sys-background));box-sizing:border-box;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color, color-mix(in srgb, var(--mat-sys-neutral-variant20) 40%, transparent))}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}@media(forced-colors: active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-content.mat-drawer-content-hidden{opacity:0}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color, var(--mat-sys-on-surface-variant));box-shadow:var(--mat-sidenav-container-elevation-shadow, none);background-color:var(--mat-sidenav-container-background-color, var(--mat-sys-surface));border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));width:var(--mat-sidenav-container-width, 360px);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}@media(forced-colors: active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media(forced-colors: active){[dir=rtl] .mat-drawer,.mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-transition .mat-drawer{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating){visibility:hidden;box-shadow:none}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating) .mat-drawer-inner-container{display:none}.mat-drawer.mat-drawer-opened.mat-drawer-opened{transform:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto}.mat-sidenav-fixed{position:fixed}\\n\"]\n    }]\n  }], null, {\n    _allDrawers: [{\n      type: ContentChildren,\n      args: [MatSidenav, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }],\n    _content: [{\n      type: ContentChild,\n      args: [MatSidenavContent]\n    }]\n  });\n})();\nclass MatSidenavModule {\n  static ɵfac = function MatSidenavModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSidenavModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatSidenavModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCommonModule, CdkScrollableModule, CdkScrollableModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSidenavModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, CdkScrollableModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent],\n      exports: [CdkScrollableModule, MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Animations used by the Material drawers.\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst matDrawerAnimations = {\n  // Represents\n  // trigger('transform', [\n  //   // We remove the `transform` here completely, rather than setting it to zero, because:\n  //   // 1. Having a transform can cause elements with ripples or an animated\n  //   //    transform to shift around in Chrome with an RTL layout (see #10023).\n  //   // 2. 3d transforms causes text to appear blurry on IE and Edge.\n  //   state(\n  //     'open, open-instant',\n  //     style({\n  //       'transform': 'none',\n  //       'visibility': 'visible',\n  //     }),\n  //   ),\n  //   state(\n  //     'void',\n  //     style({\n  //       // Avoids the shadow showing up when closed in SSR.\n  //       'box-shadow': 'none',\n  //       'visibility': 'hidden',\n  //     }),\n  //   ),\n  //   transition('void => open-instant', animate('0ms')),\n  //   transition(\n  //     'void <=> open, open-instant => void',\n  //     animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'),\n  //   ),\n  // ])\n  /** Animation that slides a drawer in and out. */\n  transformDrawer: {\n    type: 7,\n    name: 'transform',\n    definitions: [{\n      type: 0,\n      name: 'open, open-instant',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'none',\n          visibility: 'visible'\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'void',\n      styles: {\n        type: 6,\n        styles: {\n          'box-shadow': 'none',\n          visibility: 'hidden'\n        },\n        offset: null\n      }\n    }, {\n      type: 1,\n      expr: 'void => open-instant',\n      animation: {\n        type: 4,\n        styles: null,\n        timings: '0ms'\n      },\n      options: null\n    }, {\n      type: 1,\n      expr: 'void <=> open, open-instant => void',\n      animation: {\n        type: 4,\n        styles: null,\n        timings: '400ms cubic-bezier(0.25, 0.8, 0.25, 1)'\n      },\n      options: null\n    }],\n    options: {}\n  }\n};\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError };","map":{"version":3,"names":["FocusTrapFactory","FocusMonitor","InteractivityChecker","Directionality","coerceBooleanProperty","coerceNumberProperty","ESCAPE","hasModifierKey","Platform","CdkScrollable","ScrollDispatcher","ViewportRuler","CdkScrollableModule","i0","InjectionToken","inject","ChangeDetectorRef","ElementRef","NgZone","Component","ChangeDetectionStrategy","ViewEncapsulation","Renderer2","DOCUMENT","signal","EventEmitter","Injector","afterNextRender","Input","Output","ViewChild","QueryList","ContentChildren","ContentChild","NgModule","Subject","fromEvent","merge","filter","map","mapTo","takeUntil","take","startWith","debounceTime","_","_animationsDisabled","M","MatCommonModule","_c0","_c1","_c2","_c3","MatDrawerContainer_Conditional_0_Template","rf","ctx","_r1","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","MatDrawerContainer_Conditional_0_Template_div_click_0_listener","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","_onBackdropClicked","ɵɵelementEnd","ɵɵclassProp","_isShowingBackdrop","MatDrawerContainer_Conditional_3_Template","ɵɵprojection","_c4","_c5","MatSidenavContainer_Conditional_0_Template","MatSidenavContainer_Conditional_0_Template_div_click_0_listener","MatSidenavContainer_Conditional_3_Template","_c6","throwMatDuplicatedDrawerError","position","Error","MAT_DRAWER_DEFAULT_AUTOSIZE","providedIn","factory","MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY","MAT_DRAWER_CONTAINER","MatDrawerContent","_platform","_changeDetectorRef","_container","MatDrawerContainer","constructor","elementRef","scrollDispatcher","ngZone","ngAfterContentInit","_contentMarginChanges","subscribe","markForCheck","_shouldBeHidden","isBrowser","start","end","mode","opened","ɵfac","MatDrawerContent_Factory","__ngFactoryType__","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","hostVars","hostBindings","MatDrawerContent_HostBindings","ɵɵstyleProp","_contentMargins","left","right","features","ɵɵProvidersFeature","provide","useExisting","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","template","MatDrawerContent_Template","ɵɵprojectionDef","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","host","OnPush","None","providers","MatDrawer","_elementRef","_focusTrapFactory","_focusMonitor","_ngZone","_renderer","_interactivityChecker","_doc","optional","_focusTrap","_elementFocusedBeforeDrawerWasOpened","_eventCleanups","_isAttached","_anchor","_position","value","_updatePositionInParent","onPositionChanged","emit","_mode","_updateFocusTrapState","_modeChanged","next","disableClose","_disableClose","autoFocus","_autoFocus","_opened","toggle","_openedVia","_animationStarted","_animationEnd","openedChange","_openedStream","pipe","o","openedStart","undefined","_closedStream","closedStart","_destroyed","_content","_injector","activeElement","_takeFocus","_isFocusWithinDrawer","_restoreFocus","runOutsideAngular","element","nativeElement","event","keyCode","run","close","stopPropagation","preventDefault","listen","_handleTransitionEvent","_forceFocus","options","isFocusable","tabIndex","callback","cleanupBlur","cleanupMousedown","removeAttribute","focus","_focusByCssSelector","elementToFocus","querySelector","hasMovedFocus","focusInitialElement","injector","focusOrigin","focusVia","blur","activeEl","contains","ngAfterViewInit","create","ngOnDestroy","forEach","cleanup","destroy","remove","complete","open","openedVia","_closeViaBackdropClick","_setOpen","isOpen","result","restoreFocus","Promise","resolve","set","_transitionsEnabled","_setIsAnimating","setTimeout","classList","isAnimating","_getWidth","offsetWidth","enabled","hasBackdrop","newPosition","parent","parentNode","createComment","insertBefore","appendChild","target","MatDrawer_Factory","viewQuery","MatDrawer_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","MatDrawer_HostBindings","ɵɵattribute","inputs","outputs","exportAs","consts","MatDrawer_Template","dependencies","imports","_dir","_element","_animationDisabled","_allDrawers","_drawers","_userContent","_start","_end","autosize","_autosize","_drawerHasBackdrop","_backdropOverride","backdropClick","_left","_right","_doCheckSubject","scrollable","platform","viewportRuler","change","_validateDrawers","updateContentMargins","add","changes","drawer","reset","item","notifyOnChanges","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","length","_isDrawerOpen","width","ngDoCheck","_isPushed","_setContainerClass","read","isAdd","className","_closeModalDrawersViaBackdrop","MatDrawerContainer_Factory","contentQueries","MatDrawerContainer_ContentQueries","dirIndex","ɵɵcontentQuery","MatDrawerContainer_Query","MatDrawerContainer_HostBindings","MatDrawerContainer_Template","ɵɵconditionalCreate","ɵɵconditional","ɵɵadvance","styles","descendants","MatSidenavContent","ɵMatSidenavContent_BaseFactory","MatSidenavContent_Factory","ɵɵgetInheritedFactory","MatSidenavContent_Template","MatSidenav","fixedInViewport","_fixedInViewport","fixedTopGap","_fixedTopGap","fixedBottomGap","_fixedBottomGap","ɵMatSidenav_BaseFactory","MatSidenav_Factory","MatSidenav_HostBindings","MatSidenav_Template","MatSidenavContainer","ɵMatSidenavContainer_BaseFactory","MatSidenavContainer_Factory","MatSidenavContainer_ContentQueries","MatSidenavContainer_HostBindings","MatSidenavContainer_Template","MatSidenavModule","MatSidenavModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports","matDrawerAnimations","transformDrawer","name","definitions","transform","visibility","offset","expr","animation","timings"],"sources":["C:/Users/azeez/Desktop/DevOps-CI-CD-azure-project/node_modules/@angular/material/fesm2022/sidenav.mjs"],"sourcesContent":["import { FocusTrapFactory, FocusMonitor, InteractivityChecker } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Platform } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ChangeDetectorRef, ElementRef, NgZone, Component, ChangeDetectionStrategy, ViewEncapsulation, Renderer2, DOCUMENT, signal, EventEmitter, Injector, afterNextRender, Input, Output, ViewChild, QueryList, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, take, startWith, debounceTime } from 'rxjs/operators';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport '@angular/cdk/layout';\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    _platform = inject(Platform);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _container = inject(MatDrawerContainer);\n    constructor() {\n        const elementRef = inject(ElementRef);\n        const scrollDispatcher = inject(ScrollDispatcher);\n        const ngZone = inject(NgZone);\n        super(elementRef, scrollDispatcher, ngZone);\n    }\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Determines whether the content element should be hidden from the user. */\n    _shouldBeHidden() {\n        // In some modes the content is pushed based on the width of the opened sidenavs, however on\n        // the server we can't measure the sidenav so the margin is always zero. This can cause the\n        // content to jump around when it's rendered on the server and hydrated on the client. We\n        // avoid it by hiding the content on the initial render and then showing it once the sidenav\n        // has been measured on the client.\n        if (this._platform.isBrowser) {\n            return false;\n        }\n        const { start, end } = this._container;\n        return ((start != null && start.mode !== 'over' && start.opened) ||\n            (end != null && end.mode !== 'over' && end.opened));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatDrawerContent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatDrawerContent, isStandalone: true, selector: \"mat-drawer-content\", host: { properties: { \"style.margin-left.px\": \"_container._contentMargins.left\", \"style.margin-right.px\": \"_container._contentMargins.right\", \"class.mat-drawer-content-hidden\": \"_shouldBeHidden()\" }, classAttribute: \"mat-drawer-content\" }, providers: [\n            {\n                provide: CdkScrollable,\n                useExisting: MatDrawerContent,\n            },\n        ], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatDrawerContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-drawer-content',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        'class': 'mat-drawer-content',\n                        '[style.margin-left.px]': '_container._contentMargins.left',\n                        '[style.margin-right.px]': '_container._contentMargins.right',\n                        '[class.mat-drawer-content-hidden]': '_shouldBeHidden()',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        {\n                            provide: CdkScrollable,\n                            useExisting: MatDrawerContent,\n                        },\n                    ],\n                }]\n        }], ctorParameters: () => [] });\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    _elementRef = inject(ElementRef);\n    _focusTrapFactory = inject(FocusTrapFactory);\n    _focusMonitor = inject(FocusMonitor);\n    _platform = inject(Platform);\n    _ngZone = inject(NgZone);\n    _renderer = inject(Renderer2);\n    _interactivityChecker = inject(InteractivityChecker);\n    _doc = inject(DOCUMENT, { optional: true });\n    _container = inject(MAT_DRAWER_CONTAINER, { optional: true });\n    _focusTrap = null;\n    _elementFocusedBeforeDrawerWasOpened = null;\n    _eventCleanups;\n    /** Whether the view of the component has been attached. */\n    _isAttached;\n    /** Anchor node used to restore the drawer to its initial position. */\n    _anchor;\n    /** The side that the drawer is attached to. */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value !== this._position) {\n            // Static inputs in Ivy are set before the element is in the DOM.\n            if (this._isAttached) {\n                this._updatePositionInParent(value);\n            }\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    _position = 'start';\n    /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n    get mode() {\n        return this._mode;\n    }\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    _mode = 'over';\n    /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n    get disableClose() {\n        return this._disableClose;\n    }\n    set disableClose(value) {\n        this._disableClose = coerceBooleanProperty(value);\n    }\n    _disableClose = false;\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or AutoFocusTarget\n     * instead.\n     */\n    get autoFocus() {\n        const value = this._autoFocus;\n        // Note that usually we don't allow autoFocus to be set to `first-tabbable` in `side` mode,\n        // because we don't know how the sidenav is being used, but in some cases it still makes\n        // sense to do it. The consumer can explicitly set `autoFocus`.\n        if (value == null) {\n            if (this.mode === 'side') {\n                return 'dialog';\n            }\n            else {\n                return 'first-tabbable';\n            }\n        }\n        return value;\n    }\n    set autoFocus(value) {\n        if (value === 'true' || value === 'false' || value == null) {\n            value = coerceBooleanProperty(value);\n        }\n        this._autoFocus = value;\n    }\n    _autoFocus;\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     */\n    get opened() {\n        return this._opened();\n    }\n    set opened(value) {\n        this.toggle(coerceBooleanProperty(value));\n    }\n    _opened = signal(false);\n    /** How the sidenav was opened (keypress, mouse click etc.) */\n    _openedVia;\n    /** Emits whenever the drawer has started animating. */\n    _animationStarted = new Subject();\n    /** Emits whenever the drawer is done animating. */\n    _animationEnd = new Subject();\n    /** Event emitted when the drawer open state is changed. */\n    openedChange = \n    // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n    new EventEmitter(/* isAsync */ true);\n    /** Event emitted when the drawer has been opened. */\n    _openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n    /** Event emitted when the drawer has started opening. */\n    openedStart = this._animationStarted.pipe(filter(() => this.opened), mapTo(undefined));\n    /** Event emitted when the drawer has been closed. */\n    _closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n    /** Event emitted when the drawer has started closing. */\n    closedStart = this._animationStarted.pipe(filter(() => !this.opened), mapTo(undefined));\n    /** Emits when the component is destroyed. */\n    _destroyed = new Subject();\n    /** Event emitted when the drawer's position changes. */\n    // tslint:disable-next-line:no-output-on-prefix\n    onPositionChanged = new EventEmitter();\n    /** Reference to the inner element that contains all the content. */\n    _content;\n    /**\n     * An observable that emits when the drawer mode changes. This is used by the drawer container to\n     * to know when to when the mode changes so it can adapt the margins on the content.\n     */\n    _modeChanged = new Subject();\n    _injector = inject(Injector);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    constructor() {\n        this.openedChange.pipe(takeUntil(this._destroyed)).subscribe((opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n                }\n                this._takeFocus();\n            }\n            else if (this._isFocusWithinDrawer()) {\n                this._restoreFocus(this._openedVia || 'program');\n            }\n        });\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular(() => {\n            const element = this._elementRef.nativeElement;\n            fromEvent(element, 'keydown')\n                .pipe(filter(event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            }), takeUntil(this._destroyed))\n                .subscribe(event => this._ngZone.run(() => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }));\n            this._eventCleanups = [\n                this._renderer.listen(element, 'transitionrun', this._handleTransitionEvent),\n                this._renderer.listen(element, 'transitionend', this._handleTransitionEvent),\n                this._renderer.listen(element, 'transitioncancel', this._handleTransitionEvent),\n            ];\n        });\n        this._animationEnd.subscribe(() => {\n            this.openedChange.emit(this.opened);\n        });\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                const callback = () => {\n                    cleanupBlur();\n                    cleanupMousedown();\n                    element.removeAttribute('tabindex');\n                };\n                const cleanupBlur = this._renderer.listen(element, 'blur', callback);\n                const cleanupMousedown = this._renderer.listen(element, 'mousedown', callback);\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     */\n    _takeFocus() {\n        if (!this._focusTrap) {\n            return;\n        }\n        const element = this._elementRef.nativeElement;\n        // When autoFocus is not on the sidenav, if the element cannot be focused or does\n        // not exist, focus the sidenav itself so the keyboard navigation still works.\n        // We need to check that `focus` is a function due to Universal.\n        switch (this.autoFocus) {\n            case false:\n            case 'dialog':\n                return;\n            case true:\n            case 'first-tabbable':\n                afterNextRender(() => {\n                    const hasMovedFocus = this._focusTrap.focusInitialElement();\n                    if (!hasMovedFocus && typeof element.focus === 'function') {\n                        element.focus();\n                    }\n                }, { injector: this._injector });\n                break;\n            case 'first-heading':\n                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n                break;\n            default:\n                this._focusByCssSelector(this.autoFocus);\n                break;\n        }\n    }\n    /**\n     * Restores focus to the element that was originally focused when the drawer opened.\n     * If no element was focused at that time, the focus will be restored to the drawer.\n     */\n    _restoreFocus(focusOrigin) {\n        if (this.autoFocus === 'dialog') {\n            return;\n        }\n        if (this._elementFocusedBeforeDrawerWasOpened) {\n            this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, focusOrigin);\n        }\n        else {\n            this._elementRef.nativeElement.blur();\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n    }\n    /** Whether focus is currently within the drawer. */\n    _isFocusWithinDrawer() {\n        const activeEl = this._doc.activeElement;\n        return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n    }\n    ngAfterViewInit() {\n        this._isAttached = true;\n        // Only update the DOM position when the sidenav is positioned at\n        // the end since we project the sidenav before the content by default.\n        if (this._position === 'end') {\n            this._updatePositionInParent('end');\n        }\n        // Needs to happen after the position is updated\n        // so the focus trap anchors are in the right place.\n        if (this._platform.isBrowser) {\n            this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n            this._updateFocusTrapState();\n        }\n    }\n    ngOnDestroy() {\n        this._eventCleanups.forEach(cleanup => cleanup());\n        this._focusTrap?.destroy();\n        this._anchor?.remove();\n        this._anchor = null;\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /** Close the drawer. */\n    close() {\n        return this.toggle(false);\n    }\n    /** Closes the drawer with context that the backdrop was clicked. */\n    _closeViaBackdropClick() {\n        // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n        // don't need to check whether focus is currently in the drawer, as clicking on the\n        // backdrop causes blurs the active element.\n        return this._setOpen(/* isOpen */ false, /* restoreFocus */ true, 'mouse');\n    }\n    /**\n     * Toggle this drawer.\n     * @param isOpen Whether the drawer should be open.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    toggle(isOpen = !this.opened, openedVia) {\n        // If the focus is currently inside the drawer content and we are closing the drawer,\n        // restore the focus to the initially focused element (when the drawer opened).\n        if (isOpen && openedVia) {\n            this._openedVia = openedVia;\n        }\n        const result = this._setOpen(isOpen, \n        /* restoreFocus */ !isOpen && this._isFocusWithinDrawer(), this._openedVia || 'program');\n        if (!isOpen) {\n            this._openedVia = null;\n        }\n        return result;\n    }\n    /**\n     * Toggles the opened state of the drawer.\n     * @param isOpen Whether the drawer should open or close.\n     * @param restoreFocus Whether focus should be restored on close.\n     * @param focusOrigin Origin to use when restoring focus.\n     */\n    _setOpen(isOpen, restoreFocus, focusOrigin) {\n        if (isOpen === this.opened) {\n            return Promise.resolve(isOpen ? 'open' : 'close');\n        }\n        this._opened.set(isOpen);\n        if (this._container?._transitionsEnabled) {\n            // Note: it's importatnt to set this as early as possible,\n            // otherwise the animation can look glitchy in some cases.\n            this._setIsAnimating(true);\n        }\n        else {\n            // Simulate the animation events if animations are disabled.\n            setTimeout(() => {\n                this._animationStarted.next();\n                this._animationEnd.next();\n            });\n        }\n        this._elementRef.nativeElement.classList.toggle('mat-drawer-opened', isOpen);\n        if (!isOpen && restoreFocus) {\n            this._restoreFocus(focusOrigin);\n        }\n        // Needed to ensure that the closing sequence fires off correctly.\n        this._changeDetectorRef.markForCheck();\n        this._updateFocusTrapState();\n        return new Promise(resolve => {\n            this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n        });\n    }\n    /** Toggles whether the drawer is currently animating. */\n    _setIsAnimating(isAnimating) {\n        this._elementRef.nativeElement.classList.toggle('mat-drawer-animating', isAnimating);\n    }\n    _getWidth() {\n        return this._elementRef.nativeElement.offsetWidth || 0;\n    }\n    /** Updates the enabled state of the focus trap. */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // Trap focus only if the backdrop is enabled. Otherwise, allow end user to interact with the\n            // sidenav content.\n            this._focusTrap.enabled = !!this._container?.hasBackdrop && this.opened;\n        }\n    }\n    /**\n     * Updates the position of the drawer in the DOM. We need to move the element around ourselves\n     * when it's in the `end` position so that it comes after the content and the visual order\n     * matches the tab order. We also need to be able to move it back to `start` if the sidenav\n     * started off as `end` and was changed to `start`.\n     */\n    _updatePositionInParent(newPosition) {\n        // Don't move the DOM node around on the server, because it can throw off hydration.\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        const element = this._elementRef.nativeElement;\n        const parent = element.parentNode;\n        if (newPosition === 'end') {\n            if (!this._anchor) {\n                this._anchor = this._doc.createComment('mat-drawer-anchor');\n                parent.insertBefore(this._anchor, element);\n            }\n            parent.appendChild(element);\n        }\n        else if (this._anchor) {\n            this._anchor.parentNode.insertBefore(element, this._anchor);\n        }\n    }\n    /** Event handler for animation events. */\n    _handleTransitionEvent = (event) => {\n        const element = this._elementRef.nativeElement;\n        if (event.target === element) {\n            this._ngZone.run(() => {\n                if (event.type === 'transitionrun') {\n                    this._animationStarted.next(event);\n                }\n                else {\n                    // Don't toggle the animating state on `transitioncancel` since another animation should\n                    // start afterwards. This prevents the drawer from blinking if an animation is interrupted.\n                    if (event.type === 'transitionend') {\n                        this._setIsAnimating(false);\n                    }\n                    this._animationEnd.next(event);\n                }\n            });\n        }\n    };\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatDrawer, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatDrawer, isStandalone: true, selector: \"mat-drawer\", inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\", onPositionChanged: \"positionChanged\" }, host: { properties: { \"attr.align\": \"null\", \"class.mat-drawer-end\": \"position === \\\"end\\\"\", \"class.mat-drawer-over\": \"mode === \\\"over\\\"\", \"class.mat-drawer-push\": \"mode === \\\"push\\\"\", \"class.mat-drawer-side\": \"mode === \\\"side\\\"\", \"style.visibility\": \"(!_container && !opened) ? \\\"hidden\\\" : null\", \"attr.tabIndex\": \"(mode !== \\\"side\\\") ? \\\"-1\\\" : null\" }, classAttribute: \"mat-drawer\" }, viewQueries: [{ propertyName: \"_content\", first: true, predicate: [\"content\"], descendants: true }], exportAs: [\"matDrawer\"], ngImport: i0, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\", dependencies: [{ kind: \"directive\", type: CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatDrawer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-drawer', exportAs: 'matDrawer', host: {\n                        'class': 'mat-drawer',\n                        // must prevent the browser from aligning text based on value\n                        '[attr.align]': 'null',\n                        '[class.mat-drawer-end]': 'position === \"end\"',\n                        '[class.mat-drawer-over]': 'mode === \"over\"',\n                        '[class.mat-drawer-push]': 'mode === \"push\"',\n                        '[class.mat-drawer-side]': 'mode === \"side\"',\n                        // The styles that render the sidenav off-screen come from the drawer container. Prior to #30235\n                        // this was also done by the animations module which some internal tests seem to depend on.\n                        // Simulate it by toggling the `hidden` attribute instead.\n                        '[style.visibility]': '(!_container && !opened) ? \"hidden\" : null',\n                        // The sidenav container should not be focused on when used in side mode. See b/286459024 for\n                        // reference. Updates tabIndex of drawer/container to default to null if in side mode.\n                        '[attr.tabIndex]': '(mode !== \"side\") ? \"-1\" : null',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, imports: [CdkScrollable], template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\" }]\n        }], ctorParameters: () => [], propDecorators: { position: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], disableClose: [{\n                type: Input\n            }], autoFocus: [{\n                type: Input\n            }], opened: [{\n                type: Input\n            }], openedChange: [{\n                type: Output\n            }], _openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], openedStart: [{\n                type: Output\n            }], _closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], closedStart: [{\n                type: Output\n            }], onPositionChanged: [{\n                type: Output,\n                args: ['positionChanged']\n            }], _content: [{\n                type: ViewChild,\n                args: ['content']\n            }] } });\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    _dir = inject(Directionality, { optional: true });\n    _element = inject(ElementRef);\n    _ngZone = inject(NgZone);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _animationDisabled = _animationsDisabled();\n    _transitionsEnabled = false;\n    /** All drawers in the container. Includes drawers from inside nested containers. */\n    _allDrawers;\n    /** Drawers that belong to this container. */\n    _drawers = new QueryList();\n    _content;\n    _userContent;\n    /** The drawer child with the `start` position. */\n    get start() {\n        return this._start;\n    }\n    /** The drawer child with the `end` position. */\n    get end() {\n        return this._end;\n    }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     */\n    get autosize() {\n        return this._autosize;\n    }\n    set autosize(value) {\n        this._autosize = coerceBooleanProperty(value);\n    }\n    _autosize = inject(MAT_DRAWER_DEFAULT_AUTOSIZE);\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     */\n    get hasBackdrop() {\n        return this._drawerHasBackdrop(this._start) || this._drawerHasBackdrop(this._end);\n    }\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    _backdropOverride;\n    /** Event emitted when the drawer backdrop is clicked. */\n    backdropClick = new EventEmitter();\n    /** The drawer at the start/end position, independent of direction. */\n    _start;\n    _end;\n    /**\n     * The drawer at the left/right. When direction changes, these will change as well.\n     * They're used as aliases for the above to set the left/right style properly.\n     * In LTR, _left == _start and _right == _end.\n     * In RTL, _left == _end and _right == _start.\n     */\n    _left;\n    _right;\n    /** Emits when the component is destroyed. */\n    _destroyed = new Subject();\n    /** Emits on every ngDoCheck. Used for debouncing reflows. */\n    _doCheckSubject = new Subject();\n    /**\n     * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n     * drawer is open. We use margin rather than transform even for push mode because transform breaks\n     * fixed position elements inside of the transformed element.\n     */\n    _contentMargins = { left: null, right: null };\n    _contentMarginChanges = new Subject();\n    /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    _injector = inject(Injector);\n    constructor() {\n        const platform = inject(Platform);\n        const viewportRuler = inject(ViewportRuler);\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        this._dir?.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._validateDrawers();\n            this.updateContentMargins();\n        });\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler\n            .change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateContentMargins());\n        if (!this._animationDisabled && platform.isBrowser) {\n            this._ngZone.runOutsideAngular(() => {\n                // Enable the animations after a delay in order to skip\n                // the initial transition if a drawer is open by default.\n                setTimeout(() => {\n                    this._element.nativeElement.classList.add('mat-drawer-transition');\n                    this._transitionsEnabled = true;\n                }, 200);\n            });\n        }\n    }\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((drawer) => {\n            this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n            this._drawers.notifyOnChanges();\n        });\n        this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n            this._validateDrawers();\n            this._drawers.forEach((drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            });\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n        // Avoid hitting the NgZone through the debounce timeout.\n        this._ngZone.runOutsideAngular(() => {\n            this._doCheckSubject\n                .pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n            takeUntil(this._destroyed))\n                .subscribe(() => this.updateContentMargins());\n        });\n    }\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Calls `open` of both start and end drawers */\n    open() {\n        this._drawers.forEach(drawer => drawer.open());\n    }\n    /** Calls `close` of both start and end drawers */\n    close() {\n        this._drawers.forEach(drawer => drawer.close());\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        let left = 0;\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._getWidth();\n            }\n            else if (this._left.mode == 'push') {\n                const width = this._left._getWidth();\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._getWidth();\n            }\n            else if (this._right.mode == 'push') {\n                const width = this._right._getWidth();\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || null;\n        right = right || null;\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n        }\n    }\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (drawer.mode !== 'side') {\n            drawer.openedChange\n                .pipe(takeUntil(this._drawers.changes))\n                .subscribe(() => this._setContainerClass(drawer.opened));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     */\n    _watchDrawerPosition(drawer) {\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n            afterNextRender({ read: () => this._validateDrawers() }, { injector: this._injector });\n        });\n    }\n    /** Subscribes to changes in drawer mode so we can run change detection. */\n    _watchDrawerMode(drawer) {\n        drawer._modeChanged\n            .pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n            .subscribe(() => {\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n    _setContainerClass(isAdd) {\n        const classList = this._element.nativeElement.classList;\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /** Validate the state of the drawer children components. */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach(drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        });\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /** Whether the container is being pushed to the side by one of the drawers. */\n    _isPushed() {\n        return ((this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over'));\n    }\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawersViaBackdrop();\n    }\n    _closeModalDrawersViaBackdrop() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter(drawer => drawer && !drawer.disableClose && this._drawerHasBackdrop(drawer))\n            .forEach(drawer => drawer._closeViaBackdropClick());\n    }\n    _isShowingBackdrop() {\n        return ((this._isDrawerOpen(this._start) && this._drawerHasBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._drawerHasBackdrop(this._end)));\n    }\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n    // Whether argument drawer should have a backdrop when it opens\n    _drawerHasBackdrop(drawer) {\n        if (this._backdropOverride == null) {\n            return !!drawer && drawer.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatDrawerContainer, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatDrawerContainer, isStandalone: true, selector: \"mat-drawer-container\", inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, host: { properties: { \"class.mat-drawer-container-explicit-backdrop\": \"_backdropOverride\" }, classAttribute: \"mat-drawer-container\" }, providers: [\n            {\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatDrawerContainer,\n            },\n        ], queries: [{ propertyName: \"_content\", first: true, predicate: MatDrawerContent, descendants: true }, { propertyName: \"_allDrawers\", predicate: MatDrawer, descendants: true }], viewQueries: [{ propertyName: \"_userContent\", first: true, predicate: MatDrawerContent, descendants: true }], exportAs: [\"matDrawerContainer\"], ngImport: i0, template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-drawer-content>\\n    <ng-content></ng-content>\\n  </mat-drawer-content>\\n}\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color, var(--mat-sys-on-background));background-color:var(--mat-sidenav-content-background-color, var(--mat-sys-background));box-sizing:border-box;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color, color-mix(in srgb, var(--mat-sys-neutral-variant20) 40%, transparent))}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}@media(forced-colors: active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-content.mat-drawer-content-hidden{opacity:0}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color, var(--mat-sys-on-surface-variant));box-shadow:var(--mat-sidenav-container-elevation-shadow, none);background-color:var(--mat-sidenav-container-background-color, var(--mat-sys-surface));border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));width:var(--mat-sidenav-container-width, 360px);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}@media(forced-colors: active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media(forced-colors: active){[dir=rtl] .mat-drawer,.mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-transition .mat-drawer{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating){visibility:hidden;box-shadow:none}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating) .mat-drawer-inner-container{display:none}.mat-drawer.mat-drawer-opened.mat-drawer-opened{transform:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto}.mat-sidenav-fixed{position:fixed}\\n\"], dependencies: [{ kind: \"component\", type: MatDrawerContent, selector: \"mat-drawer-content\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatDrawerContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-drawer-container', exportAs: 'matDrawerContainer', host: {\n                        'class': 'mat-drawer-container',\n                        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [\n                        {\n                            provide: MAT_DRAWER_CONTAINER,\n                            useExisting: MatDrawerContainer,\n                        },\n                    ], imports: [MatDrawerContent], template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-drawer-content>\\n    <ng-content></ng-content>\\n  </mat-drawer-content>\\n}\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color, var(--mat-sys-on-background));background-color:var(--mat-sidenav-content-background-color, var(--mat-sys-background));box-sizing:border-box;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color, color-mix(in srgb, var(--mat-sys-neutral-variant20) 40%, transparent))}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}@media(forced-colors: active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-content.mat-drawer-content-hidden{opacity:0}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color, var(--mat-sys-on-surface-variant));box-shadow:var(--mat-sidenav-container-elevation-shadow, none);background-color:var(--mat-sidenav-container-background-color, var(--mat-sys-surface));border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));width:var(--mat-sidenav-container-width, 360px);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}@media(forced-colors: active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media(forced-colors: active){[dir=rtl] .mat-drawer,.mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-transition .mat-drawer{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating){visibility:hidden;box-shadow:none}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating) .mat-drawer-inner-container{display:none}.mat-drawer.mat-drawer-opened.mat-drawer-opened{transform:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto}.mat-sidenav-fixed{position:fixed}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { _allDrawers: [{\n                type: ContentChildren,\n                args: [MatDrawer, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }], _content: [{\n                type: ContentChild,\n                args: [MatDrawerContent]\n            }], _userContent: [{\n                type: ViewChild,\n                args: [MatDrawerContent]\n            }], autosize: [{\n                type: Input\n            }], hasBackdrop: [{\n                type: Input\n            }], backdropClick: [{\n                type: Output\n            }] } });\n\nclass MatSidenavContent extends MatDrawerContent {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSidenavContent, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatSidenavContent, isStandalone: true, selector: \"mat-sidenav-content\", host: { classAttribute: \"mat-drawer-content mat-sidenav-content\" }, providers: [\n            {\n                provide: CdkScrollable,\n                useExisting: MatSidenavContent,\n            },\n        ], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSidenavContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-sidenav-content',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        'class': 'mat-drawer-content mat-sidenav-content',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        {\n                            provide: CdkScrollable,\n                            useExisting: MatSidenavContent,\n                        },\n                    ],\n                }]\n        }] });\nclass MatSidenav extends MatDrawer {\n    /** Whether the sidenav is fixed in the viewport. */\n    get fixedInViewport() {\n        return this._fixedInViewport;\n    }\n    set fixedInViewport(value) {\n        this._fixedInViewport = coerceBooleanProperty(value);\n    }\n    _fixedInViewport = false;\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     */\n    get fixedTopGap() {\n        return this._fixedTopGap;\n    }\n    set fixedTopGap(value) {\n        this._fixedTopGap = coerceNumberProperty(value);\n    }\n    _fixedTopGap = 0;\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     */\n    get fixedBottomGap() {\n        return this._fixedBottomGap;\n    }\n    set fixedBottomGap(value) {\n        this._fixedBottomGap = coerceNumberProperty(value);\n    }\n    _fixedBottomGap = 0;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSidenav, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatSidenav, isStandalone: true, selector: \"mat-sidenav\", inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, host: { properties: { \"attr.tabIndex\": \"(mode !== \\\"side\\\") ? \\\"-1\\\" : null\", \"attr.align\": \"null\", \"class.mat-drawer-end\": \"position === \\\"end\\\"\", \"class.mat-drawer-over\": \"mode === \\\"over\\\"\", \"class.mat-drawer-push\": \"mode === \\\"push\\\"\", \"class.mat-drawer-side\": \"mode === \\\"side\\\"\", \"class.mat-sidenav-fixed\": \"fixedInViewport\", \"style.top.px\": \"fixedInViewport ? fixedTopGap : null\", \"style.bottom.px\": \"fixedInViewport ? fixedBottomGap : null\" }, classAttribute: \"mat-drawer mat-sidenav\" }, providers: [{ provide: MatDrawer, useExisting: MatSidenav }], exportAs: [\"matSidenav\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\", dependencies: [{ kind: \"directive\", type: CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSidenav, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-sidenav', exportAs: 'matSidenav', host: {\n                        'class': 'mat-drawer mat-sidenav',\n                        // The sidenav container should not be focused on when used in side mode. See b/286459024 for\n                        // reference. Updates tabIndex of drawer/container to default to null if in side mode.\n                        '[attr.tabIndex]': '(mode !== \"side\") ? \"-1\" : null',\n                        // must prevent the browser from aligning text based on value\n                        '[attr.align]': 'null',\n                        '[class.mat-drawer-end]': 'position === \"end\"',\n                        '[class.mat-drawer-over]': 'mode === \"over\"',\n                        '[class.mat-drawer-push]': 'mode === \"push\"',\n                        '[class.mat-drawer-side]': 'mode === \"side\"',\n                        '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                        '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                        '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, imports: [CdkScrollable], providers: [{ provide: MatDrawer, useExisting: MatSidenav }], template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\" }]\n        }], propDecorators: { fixedInViewport: [{\n                type: Input\n            }], fixedTopGap: [{\n                type: Input\n            }], fixedBottomGap: [{\n                type: Input\n            }] } });\nclass MatSidenavContainer extends MatDrawerContainer {\n    _allDrawers = undefined;\n    // We need an initializer here to avoid a TS error.\n    _content = undefined;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSidenavContainer, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatSidenavContainer, isStandalone: true, selector: \"mat-sidenav-container\", host: { properties: { \"class.mat-drawer-container-explicit-backdrop\": \"_backdropOverride\" }, classAttribute: \"mat-drawer-container mat-sidenav-container\" }, providers: [\n            {\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatSidenavContainer,\n            },\n            {\n                provide: MatDrawerContainer,\n                useExisting: MatSidenavContainer,\n            },\n        ], queries: [{ propertyName: \"_content\", first: true, predicate: MatSidenavContent, descendants: true }, { propertyName: \"_allDrawers\", predicate: MatSidenav, descendants: true }], exportAs: [\"matSidenavContainer\"], usesInheritance: true, ngImport: i0, template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-sidenav-content>\\n    <ng-content></ng-content>\\n  </mat-sidenav-content>\\n}\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color, var(--mat-sys-on-background));background-color:var(--mat-sidenav-content-background-color, var(--mat-sys-background));box-sizing:border-box;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color, color-mix(in srgb, var(--mat-sys-neutral-variant20) 40%, transparent))}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}@media(forced-colors: active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-content.mat-drawer-content-hidden{opacity:0}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color, var(--mat-sys-on-surface-variant));box-shadow:var(--mat-sidenav-container-elevation-shadow, none);background-color:var(--mat-sidenav-container-background-color, var(--mat-sys-surface));border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));width:var(--mat-sidenav-container-width, 360px);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}@media(forced-colors: active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media(forced-colors: active){[dir=rtl] .mat-drawer,.mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-transition .mat-drawer{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating){visibility:hidden;box-shadow:none}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating) .mat-drawer-inner-container{display:none}.mat-drawer.mat-drawer-opened.mat-drawer-opened{transform:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto}.mat-sidenav-fixed{position:fixed}\\n\"], dependencies: [{ kind: \"component\", type: MatSidenavContent, selector: \"mat-sidenav-content\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSidenavContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-sidenav-container', exportAs: 'matSidenavContainer', host: {\n                        'class': 'mat-drawer-container mat-sidenav-container',\n                        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [\n                        {\n                            provide: MAT_DRAWER_CONTAINER,\n                            useExisting: MatSidenavContainer,\n                        },\n                        {\n                            provide: MatDrawerContainer,\n                            useExisting: MatSidenavContainer,\n                        },\n                    ], imports: [MatSidenavContent], template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-sidenav-content>\\n    <ng-content></ng-content>\\n  </mat-sidenav-content>\\n}\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color, var(--mat-sys-on-background));background-color:var(--mat-sidenav-content-background-color, var(--mat-sys-background));box-sizing:border-box;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color, color-mix(in srgb, var(--mat-sys-neutral-variant20) 40%, transparent))}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}@media(forced-colors: active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-content.mat-drawer-content-hidden{opacity:0}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color, var(--mat-sys-on-surface-variant));box-shadow:var(--mat-sidenav-container-elevation-shadow, none);background-color:var(--mat-sidenav-container-background-color, var(--mat-sys-surface));border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));width:var(--mat-sidenav-container-width, 360px);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}@media(forced-colors: active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media(forced-colors: active){[dir=rtl] .mat-drawer,.mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-transition .mat-drawer{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating){visibility:hidden;box-shadow:none}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating) .mat-drawer-inner-container{display:none}.mat-drawer.mat-drawer-opened.mat-drawer-opened{transform:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto}.mat-sidenav-fixed{position:fixed}\\n\"] }]\n        }], propDecorators: { _allDrawers: [{\n                type: ContentChildren,\n                args: [MatSidenav, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }], _content: [{\n                type: ContentChild,\n                args: [MatSidenavContent]\n            }] } });\n\nclass MatSidenavModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSidenavModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSidenavModule, imports: [MatCommonModule,\n            CdkScrollableModule,\n            MatDrawer,\n            MatDrawerContainer,\n            MatDrawerContent,\n            MatSidenav,\n            MatSidenavContainer,\n            MatSidenavContent], exports: [CdkScrollableModule,\n            MatCommonModule,\n            MatDrawer,\n            MatDrawerContainer,\n            MatDrawerContent,\n            MatSidenav,\n            MatSidenavContainer,\n            MatSidenavContent] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSidenavModule, imports: [MatCommonModule,\n            CdkScrollableModule, CdkScrollableModule,\n            MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSidenavModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatCommonModule,\n                        CdkScrollableModule,\n                        MatDrawer,\n                        MatDrawerContainer,\n                        MatDrawerContent,\n                        MatSidenav,\n                        MatSidenavContainer,\n                        MatSidenavContent,\n                    ],\n                    exports: [\n                        CdkScrollableModule,\n                        MatCommonModule,\n                        MatDrawer,\n                        MatDrawerContainer,\n                        MatDrawerContent,\n                        MatSidenav,\n                        MatSidenavContainer,\n                        MatSidenavContent,\n                    ],\n                }]\n        }] });\n\n/**\n * Animations used by the Material drawers.\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst matDrawerAnimations = {\n    // Represents\n    // trigger('transform', [\n    //   // We remove the `transform` here completely, rather than setting it to zero, because:\n    //   // 1. Having a transform can cause elements with ripples or an animated\n    //   //    transform to shift around in Chrome with an RTL layout (see #10023).\n    //   // 2. 3d transforms causes text to appear blurry on IE and Edge.\n    //   state(\n    //     'open, open-instant',\n    //     style({\n    //       'transform': 'none',\n    //       'visibility': 'visible',\n    //     }),\n    //   ),\n    //   state(\n    //     'void',\n    //     style({\n    //       // Avoids the shadow showing up when closed in SSR.\n    //       'box-shadow': 'none',\n    //       'visibility': 'hidden',\n    //     }),\n    //   ),\n    //   transition('void => open-instant', animate('0ms')),\n    //   transition(\n    //     'void <=> open, open-instant => void',\n    //     animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'),\n    //   ),\n    // ])\n    /** Animation that slides a drawer in and out. */\n    transformDrawer: {\n        type: 7,\n        name: 'transform',\n        definitions: [\n            {\n                type: 0,\n                name: 'open, open-instant',\n                styles: {\n                    type: 6,\n                    styles: { transform: 'none', visibility: 'visible' },\n                    offset: null,\n                },\n            },\n            {\n                type: 0,\n                name: 'void',\n                styles: {\n                    type: 6,\n                    styles: { 'box-shadow': 'none', visibility: 'hidden' },\n                    offset: null,\n                },\n            },\n            {\n                type: 1,\n                expr: 'void => open-instant',\n                animation: { type: 4, styles: null, timings: '0ms' },\n                options: null,\n            },\n            {\n                type: 1,\n                expr: 'void <=> open, open-instant => void',\n                animation: {\n                    type: 4,\n                    styles: null,\n                    timings: '400ms cubic-bezier(0.25, 0.8, 0.25, 1)',\n                },\n                options: null,\n            },\n        ],\n        options: {},\n    },\n};\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}